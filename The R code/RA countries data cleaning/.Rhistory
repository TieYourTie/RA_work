excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT"
)
#create a new dataset base on the countries check list
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$LDC == 1 |
UN_HP_filter_data$HPIC == 1 |
UN_HP_filter_data$SIDS == 1 |
UN_HP_filter_data$LLDC == 1), ]
# Filter out rows with ISO codes in excluded_ISO_codes
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$ISO_code %in% excluded_ISO_codes), ]
# UN HP
n_UN_HP <- nrow(UN_HP_filter_data )
########
# Step 1: Filter rows where UN column equals 1
UN_QD_filter_data <- UN_stage_one_QD[UN_stage_one_QD$QD == 1, ]
####
# Step 1: Filter rows where UN column equals 1
UN_HP_filter_data <- UN_stage_one_HP[UN_stage_one_HP$UN == 1, ]
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$ISO_code %in% removed_countries$ISO_code), ]
# Step 3: Remove rows with ISO_code "IRQ" or "OMN"
# List of ISO codes to remove
excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT"
)
#create a new dataset base on the countries check list
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$LDC == 1 |
UN_HP_filter_data$HPIC == 1 |
UN_HP_filter_data$SIDS == 1 |
UN_HP_filter_data$LLDC == 1), ]
# Filter out rows with ISO codes in excluded_ISO_codes
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$ISO_code %in% excluded_ISO_codes), ]
# UN HP
n_UN_HP <- nrow(UN_HP_filter_data )
########
# Step 1: Filter rows where UN column equals 1
UN_QD_filter_data <- UN_stage_one_QD[UN_stage_one_QD$UN == 1, ]
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
UN_QD_filter_data  <- UN_QD_filter_data [!(UN_QD_filter_data $ISO_code %in% removed_countries$ISO_code), ]
# Step 3: Remove rows with ISO_code "IRQ" or "OMN"
# List of ISO codes to remove
excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT"
)
#create a new dataset base on the countries check list
UN_QD_filter_data  <- UN_QD_filter_data [!(UN_QD_filter_data $LDC == 1 |
UN_QD_filter_data $HPIC == 1 |
UN_QD_filter_data $SIDS == 1 |
UN_QD_filter_data $LLDC == 1), ]
# Filter out rows with ISO codes in excluded_ISO_codes
UN_QD_filter_data  <- UN_QD_filter_data [!(UN_QD_filter_data $ISO_code %in% excluded_ISO_codes), ]
# UN HP
n_UN_HP <- nrow(UN_HP_filter_data )
n_UN_QD <- nrow(UN_QD_filter_data  )
######
ggplot(UN_HP_filter_data , aes(y = Persistence_effect, x = AverageInflation)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(
title = "Persistence Effect vs Average Inflation (UN HP)",
x = "Average Inflation",
y = "Persistence Effect",
caption = paste("n =", n_UN_HP, "\nData source: United Nations")
) +
ylim(min(UN_HP_filter_data$Persistence_effect) - 0.2, max(UN_HP_filter_data$Persistence_effect) + 0.2) +
theme_economist() +
theme(
plot.title = element_text(hjust = 0.5, margin = margin(b = 10)),
plot.caption = element_text(hjust = 0, vjust = 1, face = "italic"),
plot.margin = margin(t = 20)
)
ggplot(UN_QD_filter_data  , aes(y = Persistence_effect, x = AverageInflation)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(
title = "Persistence Effect vs Average Inflation (UN QD)",
x = "Average Inflation",
y = "Persistence Effect",
caption = paste("n =", n_UN_QD , "\nData source: United Nations")
) +
ylim(min(UN_QD_filter_data  $Persistence_effect) - 0.2, max(UN_QD_filter_data $Persistence_effect) + 0.2) +
theme_economist() +
theme(
plot.title = element_text(hjust = 0.5, margin = margin(b = 10)),
plot.caption = element_text(hjust = 0, vjust = 1, face = "italic"),
plot.margin = margin(t = 20)
####
# Step 1: Filter rows where UN column equals 1
UN_HP_filter_data <- UN_stage_one_HP[UN_stage_one_HP$UN == 1, ]
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$ISO_code %in% removed_countries$ISO_code), ]
# Step 3: Remove rows with ISO_code "IRQ" or "OMN"
# List of ISO codes to remove
excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT"
)
#create a new dataset base on the countries check list
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$LDC == 1 |
UN_HP_filter_data$HPIC == 1 |
UN_HP_filter_data$SIDS == 1 |
UN_HP_filter_data$LLDC == 1), ]
# Filter out rows with ISO codes in excluded_ISO_codes
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$ISO_code %in% excluded_ISO_codes), ]
# UN HP
n_UN_HP <- nrow(UN_HP_filter_data )
########
# Step 1: Filter rows where UN column equals 1
UN_QD_filter_data <- UN_stage_one_QD[UN_stage_one_QD$UN == 1, ]
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
UN_QD_filter_data  <- UN_QD_filter_data [!(UN_QD_filter_data $ISO_code %in% removed_countries$ISO_code), ]
# Step 3: Remove rows with ISO_code "IRQ" or "OMN"
# List of ISO codes to remove
excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT"
)
#create a new dataset base on the countries check list
UN_QD_filter_data  <- UN_QD_filter_data [!(UN_QD_filter_data $LDC == 1 |
UN_QD_filter_data $HPIC == 1 |
UN_QD_filter_data $SIDS == 1 |
UN_QD_filter_data $LLDC == 1), ]
# Filter out rows with ISO codes in excluded_ISO_codes
UN_QD_filter_data  <- UN_QD_filter_data [!(UN_QD_filter_data $ISO_code %in% excluded_ISO_codes), ]
# UN HP
n_UN_HP <- nrow(UN_HP_filter_data )
n_UN_QD <- nrow(UN_QD_filter_data  )
######
ggplot(UN_HP_filter_data , aes(y = Persistence_effect, x = AverageInflation)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(
title = "Persistence Effect vs Average Inflation (UN HP)",
x = "Average Inflation",
y = "Persistence Effect",
caption = paste("n =", n_UN_HP, "\nData source: United Nations")
) +
ylim(min(UN_HP_filter_data$Persistence_effect) - 0.2, max(UN_HP_filter_data$Persistence_effect) + 0.2) +
theme_economist() +
theme(
plot.title = element_text(hjust = 0.5, margin = margin(b = 10)),
plot.caption = element_text(hjust = 0, vjust = 1, face = "italic"),
plot.margin = margin(t = 20)
)
# Create the plot
ggplot(UN_QD_filter_data, aes(y = Persistence_effect, x = AverageInflation)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(
title = "Persistence Effect vs Average Inflation (UN QD)",
x = "Average Inflation",
y = "Persistence Effect",
caption = paste("n =", n_UN_QD, "\nData source: United Nations")
) +
ylim(
min(UN_QD_filter_data$Persistence_effect, na.rm = TRUE) - 0.2,
max(UN_QD_filter_data$Persistence_effect, na.rm = TRUE) + 0.2
) +
theme_economist() +
theme(
plot.title = element_text(hjust = 0.5, margin = margin(b = 10)),
plot.caption = element_text(hjust = 0, vjust = 1, face = "italic"),
plot.margin = margin(t = 20)
)
View(UN_HP_filter_data)
View(UN_QD_filter_data)
####
# Step 1: Filter rows where UN column equals 1
UN_HP_filter_data <- UN_stage_one_HP[UN_stage_one_HP$UN == 1, ]
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$ISO_code %in% removed_countries$ISO_code), ]
# Step 3: Remove rows with ISO_code "IRQ" or "OMN"
# List of ISO codes to remove
excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT"
)
#create a new dataset base on the countries check list
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$LDC == 1 |
UN_HP_filter_data$HPIC == 1 |
UN_HP_filter_data$SIDS == 1 |
UN_HP_filter_data$LLDC == 1), ]
# Filter out rows with ISO codes in excluded_ISO_codes
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$ISO_code %in% excluded_ISO_codes), ]
# UN HP
n_UN_HP <- nrow(UN_HP_filter_data )
ggplot(UN_HP_filter_data , aes(y = Persistence_effect, x = AverageInflation)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(
title = "Persistence Effect vs Average Inflation (UN HP)",
x = "Average Inflation",
y = "Persistence Effect",
caption = paste("n =", n_UN_HP, "\nData source: United Nations")
) +
ylim(min(UN_HP_filter_data$Persistence_effect) - 0.2, max(UN_HP_filter_data$Persistence_effect) + 0.2) +
theme_economist() +
theme(
plot.title = element_text(hjust = 0.5, margin = margin(b = 10)),
plot.caption = element_text(hjust = 0, vjust = 1, face = "italic"),
plot.margin = margin(t = 20)
)
View(UN_HP_filter_data)
View(filtered_data)
View(UN_HP_filter_data)
####
# Step 1: Filter rows where UN column equals 1
UN_HP_filter_data <- UN_stage_one_HP[UN_stage_one_HP$UN == 1, ]
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$ISO_code %in% removed_countries$ISO_code), ]
# Step 3: Remove rows with ISO_code "IRQ" or "OMN"
# List of ISO codes to remove
excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT" , "PRK", "GNQ"
)
#create a new dataset base on the countries check list
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$LDC == 1 |
UN_HP_filter_data$HPIC == 1 |
UN_HP_filter_data$SIDS == 1 |
UN_HP_filter_data$LLDC == 1), ]
# Filter out rows with ISO codes in excluded_ISO_codes
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$ISO_code %in% excluded_ISO_codes), ]
# UN HP
n_UN_HP <- nrow(UN_HP_filter_data )
ggplot(UN_HP_filter_data , aes(y = Persistence_effect, x = AverageInflation)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(
title = "Persistence Effect vs Average Inflation (UN HP)",
x = "Average Inflation",
y = "Persistence Effect",
caption = paste("n =", n_UN_HP, "\nData source: United Nations")
) +
ylim(min(UN_HP_filter_data$Persistence_effect) - 0.2, max(UN_HP_filter_data$Persistence_effect) + 0.2) +
theme_economist() +
theme(
plot.title = element_text(hjust = 0.5, margin = margin(b = 10)),
plot.caption = element_text(hjust = 0, vjust = 1, face = "italic"),
plot.margin = margin(t = 20)
)
########
# Step 1: Filter rows where UN column equals 1
UN_QD_filter_data <- UN_stage_one_QD[UN_stage_one_QD$UN == 1, ]
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
UN_QD_filter_data  <- UN_QD_filter_data [!(UN_QD_filter_data $ISO_code %in% removed_countries$ISO_code), ]
#create a new dataset base on the countries check list
UN_QD_filter_data  <- UN_QD_filter_data [!(UN_QD_filter_data $LDC == 1 |
UN_QD_filter_data $HPIC == 1 |
UN_QD_filter_data $SIDS == 1 |
UN_QD_filter_data $LLDC == 1), ]
# Filter out rows with ISO codes in excluded_ISO_codes
UN_QD_filter_data  <- UN_QD_filter_data [!(UN_QD_filter_data $ISO_code %in% excluded_ISO_codes), ]
# UN HP
n_UN_QD <- nrow(UN_QD_filter_data  )
######
# Create the plot
ggplot(UN_QD_filter_data, aes(y = Persistence_effect, x = AverageInflation)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(
title = "Persistence Effect vs Average Inflation (UN QD)",
x = "Average Inflation",
y = "Persistence Effect",
caption = paste("n =", n_UN_QD, "\nData source: United Nations")
) +
ylim(
min(UN_QD_filter_data$Persistence_effect, na.rm = TRUE) - 0.2,
max(UN_QD_filter_data$Persistence_effect, na.rm = TRUE) + 0.2
) +
theme_economist() +
theme(
plot.title = element_text(hjust = 0.5, margin = margin(b = 10)),
plot.caption = element_text(hjust = 0, vjust = 1, face = "italic"),
plot.margin = margin(t = 20)
)
########
# Step 1: Filter rows where UN column equals 1
UN_QD_filter_data <- UN_stage_one_QD[UN_stage_one_QD$UN == 1, ]
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
UN_QD_filter_data  <- UN_QD_filter_data [!(UN_QD_filter_data $ISO_code %in% removed_countries$ISO_code), ]
#create a new dataset base on the countries check list
UN_QD_filter_data  <- UN_QD_filter_data [!(UN_QD_filter_data $LDC == 1 |
UN_QD_filter_data $HPIC == 1 |
UN_QD_filter_data $SIDS == 1 |
UN_QD_filter_data $LLDC == 1), ]
# Filter out rows with ISO codes in excluded_ISO_codes
UN_QD_filter_data  <- UN_QD_filter_data [!(UN_QD_filter_data $ISO_code %in% excluded_ISO_codes), ]
# UN HP
n_UN_QD <- nrow(UN_QD_filter_data  )
######
# Create the plot
ggplot(UN_QD_filter_data, aes(y = Persistence_effect, x = AverageInflation)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(
title = "Persistence Effect vs Average Inflation (UN QD)",
x = "Average Inflation",
y = "Persistence Effect",
caption = paste("n =", n_UN_QD, "\nData source: United Nations")
) +
ylim(
min(UN_QD_filter_data$Persistence_effect, na.rm = TRUE) - 0.1,
max(UN_QD_filter_data$Persistence_effect, na.rm = TRUE) + 0.1
) +
theme_economist() +
theme(
plot.title = element_text(hjust = 0.5, margin = margin(b = 10)),
plot.caption = element_text(hjust = 0, vjust = 1, face = "italic"),
plot.margin = margin(t = 20)
)
UN_stage_one_HP
summary(UN_stage_one_HP)
print(summary(UN_HP_filter_data ))
model_one_QD <- lm(Persistence_effect~ AverageInflation, data = UN_QD_filter_data)
print(model_one_QD)
print(summary(UN_HP_filter_data$Persistence_effect))
print(summary(UN_HP_filter_data$Impact_effect))
print( IFS_stage_one_QD)
print(sort( IFS_stage_one_QD$AverageInflation))
####
# Step 1: Filter rows where UN column equals 1
WB_HP_filter_data <- WB_stage_one_HP[WB_stage_one_HP$UN == 1, ]
excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT" , "PRK", "GNQ"
)
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
WB_HP_filter_data <- WB_HP_filter_data[!(WB_HP_filter_data$ISO_code %in% excluded_ISO_codes$ISO_code), ]
####
# Step 1: Filter rows where UN column equals 1
WB_HP_filter_data <- WB_stage_one_HP[WB_stage_one_HP$UN == 1, ]
excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT" , "PRK", "GNQ"
)
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
WB_HP_filter_data <- WB_HP_filter_data[!(WB_HP_filter_data$ISO_code %in% excluded_ISO_codes$ISO_code), ]
####
# Step 1: Filter rows where UN column equals 1
WB_HP_filter_data <- WB_stage_one_HP[WB_stage_one_HP$UN == 1, ]
excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT" , "PRK", "GNQ"
)
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
WB_HP_filter_data <- WB_HP_filter_data[!(WB_HP_filter_data$ISO_code %in% excluded_ISO_codes), ]
#create a new dataset base on the countries check list
WB_HP_filter_data <- UWB_HP_filter_data[!(WB_HP_filter_data$LDC == 1 |
WB_HP_filter_data$HPIC == 1 |
WB_HP_filter_data$SIDS == 1 |
WB_HP_filter_data$LLDC == 1), ]
####
# Step 1: Filter rows where UN column equals 1
WB_HP_filter_data <- WB_stage_one_HP[WB_stage_one_HP$UN == 1, ]
excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT" , "PRK", "GNQ"
)
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
WB_HP_filter_data <- WB_HP_filter_data[!(WB_HP_filter_data$ISO_code %in% excluded_ISO_codes), ]
#create a new dataset base on the countries check list
WB_HP_filter_data <- WB_HP_filter_data[!(WB_HP_filter_data$LDC == 1 |
WB_HP_filter_data$HPIC == 1 |
WB_HP_filter_data$SIDS == 1 |
WB_HP_filter_data$LLDC == 1), ]
# Calculate the number of countries
n <- nrow(WB_HP_filter_data)
# Find the top 3 countries with the highest average inflation
top_countries <- WB_stage_one_HP %>%
arrange(desc(AverageInflation)) %>%
head(3) # Adjust the number of countries as desired
####
# Step 1: Filter rows where UN column equals 1
WB_HP_filter_data <- WB_stage_one_HP[WB_stage_one_HP$UN == 1, ]
excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT" , "PRK", "GNQ"
)
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
WB_HP_filter_data <- WB_HP_filter_data[!(WB_HP_filter_data$ISO_code %in% excluded_ISO_codes), ]
#create a new dataset base on the countries check list
WB_HP_filter_data <- WB_HP_filter_data[!(WB_HP_filter_data$LDC == 1 |
WB_HP_filter_data$HPIC == 1 |
WB_HP_filter_data$SIDS == 1 |
WB_HP_filter_data$LLDC == 1), ]
# Calculate the number of countries
n <- nrow(WB_HP_filter_data)
# Plot with specified adjustments and added space for the title
ggplot(WB_HP_filter_data, aes(y = Persistence_effect, x = AverageInflation)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") + # Linear regression line
labs(
title = "Persistence Effect vs Average Inflation (HP)",
x = "Average Inflation",
y = "Persistence Effect",
caption = paste("n =", n, "\nData source: World Bank")
) +
ylim(min(WB_stage_one_HP$Persistence_effect) - 0.2, max(WB_stage_one_HP$Persistence_effect) + 0.2) + # Set y-axis limits
theme_economist() + # Economist theme
theme(
plot.title = element_text(hjust = 0.5, margin = margin(b = 10)), # Increase bottom margin of title
plot.caption = element_text(hjust = 0, vjust = 1, face = "italic"), # Position caption in bottom-left
plot.margin = margin(t = 20) # Add extra margin above the plot
)
library (lubridate)     #the time series processing package
library (cansim)        #provides easy access to the statistics canada data tale
library (WDI)           #Accesses data from the world development indicators
library (fredr)         #provide an interface to the federal reserve economic data API
library (tsbox)         #Make time series convverstion, aggregation and plotting simple
library (RColorBrewer)  #color palettes for R graphics
library(wesanderson)    #Provides color palettes inspired by Wes Anderson films.
library(writexl)        #Writes data frames to Excel files.
library(tidyr)          #Tidies messy data
library(xts)            #Extensible time series class for R
library(dplyr)          #Data manipulation and transformation.
library(openxlsx)       #Read, write, and edit Excel files.
library(ggplot2)
library(ggthemes)
library(dplyr)
library(ggthemes)
library(readxl)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(gridExtra)
####
# Step 1: Filter rows where UN column equals 1
WB_HP_filter_data <- WB_stage_one_HP[WB_stage_one_HP$UN == 1, ]
excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT" , "PRK", "GNQ"
)
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
WB_HP_filter_data <- WB_HP_filter_data[!(WB_HP_filter_data$ISO_code %in% excluded_ISO_codes), ]
#create a new dataset base on the countries check list
WB_HP_filter_data <- WB_HP_filter_data[!(WB_HP_filter_data$LDC == 1 |
WB_HP_filter_data$HPIC == 1 |
WB_HP_filter_data$SIDS == 1 |
WB_HP_filter_data$LLDC == 1), ]
# Calculate the number of countries
n <- nrow(WB_HP_filter_data)
# Plot with specified adjustments and added space for the title
ggplot(WB_HP_filter_data, aes(y = Persistence_effect, x = AverageInflation)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") + # Linear regression line
labs(
title = "Persistence Effect vs Average Inflation (HP)",
x = "Average Inflation",
y = "Persistence Effect",
caption = paste("n =", n, "\nData source: World Bank")
) +
ylim(min(WB_stage_one_HP$Persistence_effect) - 0.2, max(WB_stage_one_HP$Persistence_effect) + 0.2) + # Set y-axis limits
theme_economist() + # Economist theme
theme(
plot.title = element_text(hjust = 0.5, margin = margin(b = 10)), # Increase bottom margin of title
plot.caption = element_text(hjust = 0, vjust = 1, face = "italic"), # Position caption in bottom-left
plot.margin = margin(t = 20) # Add extra margin above the plot
)
####
# Step 1: Filter rows where UN column equals 1
UN_HP_filter_data <- UN_stage_one_HP[UN_stage_one_HP$UN == 1, ]
# Step 2: Remove rows with ISO_code matching those in removed_countries$ISO_code
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$ISO_code %in% removed_countries$ISO_code), ]
# Step 3: Remove rows with ISO_code "IRQ" or "OMN"
# List of ISO codes to remove
excluded_ISO_codes <- c(
"IRQ", "OMN", "SOM", "YEM", "SSD", "COD", "SYR", "AFG", "SDN", "CAF", "TCD",
"HTI", "ETH", "MMR", "MLI", "GIN", "NGA", "ZWE", "LBY", "UKR", "ERI", "BDI",
"BFA", "MOZ", "CMR", "NER", "LBN", "UGA", "COG", "VEN", "LKA", "IRN", "BRN", "KWT" , "PRK", "GNQ"
)
#create a new dataset base on the countries check list
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$LDC == 1 |
UN_HP_filter_data$HPIC == 1 |
UN_HP_filter_data$SIDS == 1 |
UN_HP_filter_data$LLDC == 1), ]
# Filter out rows with ISO codes in excluded_ISO_codes
UN_HP_filter_data <- UN_HP_filter_data[!(UN_HP_filter_data$ISO_code %in% excluded_ISO_codes), ]
# UN HP
n_UN_HP <- nrow(UN_HP_filter_data )
ggplot(UN_HP_filter_data , aes(y = Persistence_effect, x = AverageInflation)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(
title = "Persistence Effect vs Average Inflation (UN HP)",
x = "Average Inflation",
y = "Persistence Effect",
caption = paste("n =", n_UN_HP, "\nData source: United Nations")
) +
ylim(min(UN_HP_filter_data$Persistence_effect) - 0.2, max(UN_HP_filter_data$Persistence_effect) + 0.2) +
theme_economist() +
theme(
plot.title = element_text(hjust = 0.5, margin = margin(b = 10)),
plot.caption = element_text(hjust = 0, vjust = 1, face = "italic"),
plot.margin = margin(t = 20)
)
